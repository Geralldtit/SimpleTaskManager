//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaskManager.Client.TaskManagerServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/TaskManager.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BeginTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TaskManager.Client.TaskManagerServices.Person[] TaskPersonsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BeginTime {
            get {
                return this.BeginTimeField;
            }
            set {
                if ((this.BeginTimeField.Equals(value) != true)) {
                    this.BeginTimeField = value;
                    this.RaisePropertyChanged("BeginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Hours {
            get {
                return this.HoursField;
            }
            set {
                if ((this.HoursField.Equals(value) != true)) {
                    this.HoursField = value;
                    this.RaisePropertyChanged("Hours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrShortName {
            get {
                return this.PrShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrShortNameField, value) != true)) {
                    this.PrShortNameField = value;
                    this.RaisePropertyChanged("PrShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskName {
            get {
                return this.TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskNameField, value) != true)) {
                    this.TaskNameField = value;
                    this.RaisePropertyChanged("TaskName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TaskManager.Client.TaskManagerServices.Person[] TaskPersons {
            get {
                return this.TaskPersonsField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskPersonsField, value) != true)) {
                    this.TaskPersonsField = value;
                    this.RaisePropertyChanged("TaskPersons");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/TaskManager.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SonameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondName {
            get {
                return this.SecondNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondNameField, value) != true)) {
                    this.SecondNameField = value;
                    this.RaisePropertyChanged("SecondName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Soname {
            get {
                return this.SonameField;
            }
            set {
                if ((object.ReferenceEquals(this.SonameField, value) != true)) {
                    this.SonameField = value;
                    this.RaisePropertyChanged("Soname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/TaskManager.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class Status : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusTitle {
            get {
                return this.StatusTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusTitleField, value) != true)) {
                    this.StatusTitleField = value;
                    this.RaisePropertyChanged("StatusTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/TaskManager.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class Project : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TaskManager.Client.TaskManagerServices.Task[] PrTasksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrName {
            get {
                return this.PrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrNameField, value) != true)) {
                    this.PrNameField = value;
                    this.RaisePropertyChanged("PrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrShortName {
            get {
                return this.PrShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrShortNameField, value) != true)) {
                    this.PrShortNameField = value;
                    this.RaisePropertyChanged("PrShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TaskManager.Client.TaskManagerServices.Task[] PrTasks {
            get {
                return this.PrTasksField;
            }
            set {
                if ((object.ReferenceEquals(this.PrTasksField, value) != true)) {
                    this.PrTasksField = value;
                    this.RaisePropertyChanged("PrTasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((this.ProjectIDField.Equals(value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TaskManagerServices.IServices")]
    public interface IServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/InsertTask", ReplyAction="http://tempuri.org/IServices/InsertTaskResponse")]
        void InsertTask(TaskManager.Client.TaskManagerServices.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/UpdateTask", ReplyAction="http://tempuri.org/IServices/UpdateTaskResponse")]
        void UpdateTask(TaskManager.Client.TaskManagerServices.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/DeleteTask", ReplyAction="http://tempuri.org/IServices/DeleteTaskResponse")]
        void DeleteTask(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetAllTasks", ReplyAction="http://tempuri.org/IServices/GetAllTasksResponse")]
        TaskManager.Client.TaskManagerServices.Task[] GetAllTasks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetTaskById", ReplyAction="http://tempuri.org/IServices/GetTaskByIdResponse")]
        TaskManager.Client.TaskManagerServices.Task GetTaskById(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetAllStatus", ReplyAction="http://tempuri.org/IServices/GetAllStatusResponse")]
        TaskManager.Client.TaskManagerServices.Status[] GetAllStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/InsertProject", ReplyAction="http://tempuri.org/IServices/InsertProjectResponse")]
        int InsertProject(TaskManager.Client.TaskManagerServices.Project project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetAllProjects", ReplyAction="http://tempuri.org/IServices/GetAllProjectsResponse")]
        TaskManager.Client.TaskManagerServices.Project[] GetAllProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetProjectByProjectId", ReplyAction="http://tempuri.org/IServices/GetProjectByProjectIdResponse")]
        TaskManager.Client.TaskManagerServices.Project GetProjectByProjectId(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/UpdateProject", ReplyAction="http://tempuri.org/IServices/UpdateProjectResponse")]
        void UpdateProject(TaskManager.Client.TaskManagerServices.Project project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/DeleteProject", ReplyAction="http://tempuri.org/IServices/DeleteProjectResponse")]
        void DeleteProject(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/InsertPerson", ReplyAction="http://tempuri.org/IServices/InsertPersonResponse")]
        void InsertPerson(TaskManager.Client.TaskManagerServices.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetAllPersons", ReplyAction="http://tempuri.org/IServices/GetAllPersonsResponse")]
        TaskManager.Client.TaskManagerServices.Person[] GetAllPersons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetPersonById", ReplyAction="http://tempuri.org/IServices/GetPersonByIdResponse")]
        TaskManager.Client.TaskManagerServices.Person GetPersonById(int personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/UpdatePerson", ReplyAction="http://tempuri.org/IServices/UpdatePersonResponse")]
        void UpdatePerson(TaskManager.Client.TaskManagerServices.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/DeletePerson", ReplyAction="http://tempuri.org/IServices/DeletePersonResponse")]
        void DeletePerson(int personId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicesChannel : TaskManager.Client.TaskManagerServices.IServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicesClient : System.ServiceModel.ClientBase<TaskManager.Client.TaskManagerServices.IServices>, TaskManager.Client.TaskManagerServices.IServices {
        
        public ServicesClient() {
        }
        
        public ServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void InsertTask(TaskManager.Client.TaskManagerServices.Task task) {
            base.Channel.InsertTask(task);
        }
        
        public void UpdateTask(TaskManager.Client.TaskManagerServices.Task task) {
            base.Channel.UpdateTask(task);
        }
        
        public void DeleteTask(int taskId) {
            base.Channel.DeleteTask(taskId);
        }
        
        public TaskManager.Client.TaskManagerServices.Task[] GetAllTasks() {
            return base.Channel.GetAllTasks();
        }
        
        public TaskManager.Client.TaskManagerServices.Task GetTaskById(int taskId) {
            return base.Channel.GetTaskById(taskId);
        }
        
        public TaskManager.Client.TaskManagerServices.Status[] GetAllStatus() {
            return base.Channel.GetAllStatus();
        }
        
        public int InsertProject(TaskManager.Client.TaskManagerServices.Project project) {
            return base.Channel.InsertProject(project);
        }
        
        public TaskManager.Client.TaskManagerServices.Project[] GetAllProjects() {
            return base.Channel.GetAllProjects();
        }
        
        public TaskManager.Client.TaskManagerServices.Project GetProjectByProjectId(int projectId) {
            return base.Channel.GetProjectByProjectId(projectId);
        }
        
        public void UpdateProject(TaskManager.Client.TaskManagerServices.Project project) {
            base.Channel.UpdateProject(project);
        }
        
        public void DeleteProject(int projectId) {
            base.Channel.DeleteProject(projectId);
        }
        
        public void InsertPerson(TaskManager.Client.TaskManagerServices.Person person) {
            base.Channel.InsertPerson(person);
        }
        
        public TaskManager.Client.TaskManagerServices.Person[] GetAllPersons() {
            return base.Channel.GetAllPersons();
        }
        
        public TaskManager.Client.TaskManagerServices.Person GetPersonById(int personId) {
            return base.Channel.GetPersonById(personId);
        }
        
        public void UpdatePerson(TaskManager.Client.TaskManagerServices.Person person) {
            base.Channel.UpdatePerson(person);
        }
        
        public void DeletePerson(int personId) {
            base.Channel.DeletePerson(personId);
        }
    }
}
